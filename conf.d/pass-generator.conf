# Configuración Nginx - Pass Generator
# HTTP - Redirección a HTTPS
server {
    listen 80;
    server_name mobilepass.itass.cloud wallet.itass.cloud _;

    # Health check endpoints
    location /health {
        access_log off;
        add_header Content-Type text/plain;

        if ($host = "mobilepass.itass.cloud") {
            return 200 "frontend-healthy\n";
        }
        if ($host = "wallet.itass.cloud") {
            return 200 "backend-healthy\n";
        }

        # Fallback para health checks directos
        return 200 "pass-generator-healthy\n";
    }

    # Redireccionar todo a HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS - Frontend (mobilepass.itass.cloud)
server {
    listen 443 ssl;
    http2 on;
    server_name mobilepass.itass.cloud;

    # Certificados SSL para mobilepass.itass.cloud (wildcard *.itass.cloud)
    ssl_certificate /etc/ssl/itass/certificate.crt;
    ssl_certificate_key /etc/ssl/itass/private.key;

    # Configuraciones SSL seguras
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Headers de seguridad
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Health check
    location /health {
        access_log off;
        return 200 "frontend-healthy\n";
        add_header Content-Type text/plain;
    }

    # Proxy al frontend
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
}

# HTTPS - Backend (wallet.itass.cloud)
server {
    listen 443 ssl;
    http2 on;
    server_name wallet.itass.cloud;

    # Certificados SSL para wallet.itass.cloud (wildcard *.itass.cloud)
    ssl_certificate /etc/ssl/itass/certificate.crt;
    ssl_certificate_key /etc/ssl/itass/private.key;

    # Configuraciones SSL seguras
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Headers de seguridad
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Health check
    location /health {
        access_log off;
        return 200 "backend-healthy\n";
        add_header Content-Type text/plain;
    }

    # Proxy al backend
    location / {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        
        # Headers CORS
        add_header Access-Control-Allow-Origin "https://mobilepass.itass.cloud" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://mobilepass.itass.cloud";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }

    # Rate limiting especial para autenticación
    location /api/auth {
        limit_req zone=auth burst=5 nodelay;
        
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 30s;
    }
}
